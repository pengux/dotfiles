# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $mod2 Mod1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
# set $menu dmenu-wl_run -i -h 30
set $menu "rofi -combi-modi window,drun,run -show combi -show-icons"
#-fn "Inconsolata Nerd Font Mono"
set $passmenu tessen
set $bitwardenmenu rofi-rbw
set $calcmenu "rofi -show calc -modi calc -no-show-match -no-sort"
# -fn "Inconsolata Nerd Font Mono"

### Styles
default_border pixel 1

### Output configuration
#
set $laptop eDP-1
output $laptop scale 2
output $laptop pos 0 0 res 3840x2400
output DP-1 pos 1920 0 res 1920x1080
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
# output * bg `$HOME/.config/sway/random_bg` fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
for_window [class=".*"] inhibit_idle fullscreen
for_window [app_id=".*"] inhibit_idle fullscreen
exec swayidle -w \
         timeout 600 'swaylock -f -c 000000' \
         timeout 900 'systemctl suspend' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration

# Example configuration:
#
input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

input type:mouse {
    natural_scroll enabled
}

input type:keyboard {
    xkb_options caps:escape
    xkb_layout se,vn
    repeat_rate 100
    repeat_delay 250
}

input "1386:18670:Wacom_HID_48EE_Finger" map_to_output eDP-1
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+c kill

# Start your launcher
bindsym $mod+space exec $menu
bindsym $mod+p exec $bitwardenmenu
bindsym $mod+Shift+p exec $passmenu
bindsym $mod+c exec $calcmenu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
# bindsym $mod+Left focus left
# bindsym $mod+Down focus down
# bindsym $mod+Up focus up
# bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
# bindsym $mod+Shift+Left move left
# bindsym $mod+Shift+Down move down
# bindsym $mod+Shift+Up move up
# bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# App assigned workspaces
assign [app_id="waterfox"] 2
for_window [app_id="waterfox"] focus
for_window [app_id="waterfox"] inhibit_idle fullscreen
assign [title="Chromium"] 2
for_window [title="Chromium"] focus

assign [title="Slack"] 3
for_window [title="Slack"] focus
assign [class="Skype"] 3
for_window [class="Skype"] focus
assign [class="Signal"] 3
for_window [class="Signal"] focus
assign [title="WhatsApp for Linux"] 3
for_window [title="WhatsApp for Linux"] focus

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

bindsym $mod+$mod2+l workspace next
bindsym $mod+$mod2+h workspace prev

bindsym $mod+Control+l move workspace to output left
bindsym $mod+Control+h move workspace to output right
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
# bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show


bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Screen brightness controls
bindsym XF86MonBrightnessUp exec "light -A 5"
bindsym XF86MonBrightnessDown exec "light -U 5"

# Notifications
bindsym Control+space exec makoctl dismiss
bindsym Control+Shift+space exec makoctl dismiss -a

# Screenshot
bindsym $mod+Control+Shift+1 exec grim -g "$(slurp -d)" - | wl-copy -t image/png
bindsym $mod+Control+Shift+2 exec grim - | wl-copy
bindsym $mod+Control+Shift+3 exec grim -g "$(slurp -d)" - | tee /tmp/screenshot.png
# for_window [title="imv.*screenshot"] floating enable
# for_window [title="imv.*screenshot"] fullscreen on
# bindsym $mod+Control+Shift+1 exec ~/.scripts/screenshot-clipboard.sh
# bindsym $mod+Control+Shift+3 exec ~/.scripts/screenshot-tmp-file.sh

# Alt+tab
bindsym $mod+Tab exec swaymsg workspace back_and_forth

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Gaps
gaps outer 2
gaps inner 2

include /etc/sway/config.d/*

# Autostart applications
exec --no-startup-id libinput-gestures-setup restart
exec systemctl --user start mako
exec --no-startup-id rot8
exec foot
exec mullvad-vpn
exec fcitx5 -d -r
exec waterfox-g4
exec slack
exec skypeforlinux
exec signal-desktop
exec whatsapp-for-linux
exec blueman-applet
#exec autotiling-rs

output * bg `$HOME/.config/sway/random_bg` fill

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }
bar {
    swaybar_command waybar
}

